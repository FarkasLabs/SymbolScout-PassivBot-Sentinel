# SymbolScout API endpoint
symbolscout_endpoint: "https://symbolscout.farkaslabs.xyz/api/news/breaking"

# Interval (in seconds) between checks for new news.
# Keep in mind that SymbolScout scrapes the crypto news sites every 10 minutes.
# Setting this lower than 600 seconds (10 minutes) may not provide additional benefits.
check_interval: 600

# News monitoring configuration
news_monitoring:
    # Categories of news to monitor (use an empty list [] to monitor all categories)
    categories:
        - "DELISTING"
        - "TOKEN_SWAP"

    # Quote currencies to monitor for news filtering
    # This setting affects which news articles are considered relevant:
    # - If specified: Only news involving these quote currencies will be processed
    # - If empty []: All news articles will be considered, regardless of quote currency
    #
    # Note: This is different from the trading quote currency used in your PassivBot config
    #
    # Common quote currencies: USDT, USDC, USD, DAI
    quote_currencies:
        - "USDT"
        - "USDC"
        - "USD"

# PassivBot configuration
passivbot:
    # Folder where passivbot is located
    passivbot_folder: "~/passivbot"

    # Trading quote currency for your PassivBot configurations
    # This specifies the quote currency used in your trading pairs (e.g., BTCUSDT)
    # Options:
    # 1. Specify a value: Will be used for all configs (e.g., "USDT")
    # 2. Leave empty or remove this line: The script will attempt to detect
    #    the quote currency from each PassivBot config file individually
    trading_quote_currency: "USDT"

    # Symbol exclusion strategy when negative news is detected - how it handles the affected symbols
    symbol_exclusion_strategy:
        # If true, removes the affected symbol from the 'approved_coins' list in PassivBot config
        remove_from_approved_coins: true

        # If true, adds the affected symbol to the 'ignored_coins' list in PassivBot config
        add_to_ignored_coins: false

    # Execution mode (tmuxp, docker, systemd, etc.)
    # This determines how PassivBot instances are started and stopped
    # !!! only tmuxp mode is implemented at the moment !!!
    mode: "tmuxp"

    # TMuxp specific configuration
    tmuxp:
        # Path to the tmuxp configuration file
        # This file defines the structure of the tmux session for PassivBot
        tmux_config_file: "./passivbot-tmux-sessions-example.yml"

        # Name of the tmux session
        # This is used to identify and manage the PassivBot tmux session
        tmux_session_name: "passivbot_instances"

        # Command to stop PassivBot
        # This command kills the tmux session
        stop_command: "tmux kill-session -t $tmux_session_name"

        # Command to start PassivBot
        # This loads the tmuxp configuration file in detached mode
        start_command: "tmuxp load -d $tmux_config_file"

    # PassivBot configuration files to update based on the news
    passivbot_config_files:
        - config_file: "$passivbot_folder/configs/forager/bybit_01.json"
        - config_file: "$passivbot_folder/configs/forager/bybit_02.json"
        - config_file: "$passivbot_folder/configs/forager/bybit_03.json"
        - config_file: "$passivbot_folder/configs/forager/bybit_04.json"

# Notification configuration using Apprise
notifications:
    # Apprise URLs for sending notifications. You can set multiple notification channels.
    # You can specify multiple URLs to send notifications to different services
    # For a full list of supported services and URL formats, visit:
    # https://github.com/caronc/apprise/wiki
    # Some examples:
    # apprise_urls:
    #     - "mailtos://mySendingUsername:mySendingPassword@example.com?to=receivingAddress@example.com"
    #     - "tgram://bottoken/chatid"
    #     - "discord://webhook_id/webhook_token"
    apprise_urls:
        - "discord://webhook_id/webhook_token"

    # Configure which events trigger notifications
    notify_on:
        # Set to true to receive notifications about all errors
        errors: true

        # Set to true to be notified when a PassivBot config is updated and the bot is restarted
        config_updates: true

        # Set to true to be notified when new, unprocessed news is detected and processed
        new_news: true
